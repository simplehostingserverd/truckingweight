# Copyright (c) 2025 Cargo Scale Pro. All Rights Reserved.
#
# PROPRIETARY AND CONFIDENTIAL
#
# This file is part of the Cargo Scale Pro Weight Management System.
# Unauthorized copying of this file, via any medium is strictly prohibited.
#
# This file contains proprietary and confidential information of
# Cargo Scale Pro and may not be copied, distributed, or used
# in any way without explicit written permission.

version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner # Use the production-ready runner stage
      args:
        - NODE_ENV=production
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-https://cargoscalepro.com}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://api.cargoscalepro.com}
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        - NEXT_PUBLIC_MAPBOX_TOKEN=${NEXT_PUBLIC_MAPBOX_TOKEN}
        - NEXT_PUBLIC_CESIUM_TOKEN=${NEXT_PUBLIC_CESIUM_TOKEN}
        - NEXT_PUBLIC_MAPTILER_KEY=${NEXT_PUBLIC_MAPTILER_KEY}
        - NEXT_PUBLIC_HCAPTCHA_SITE_KEY=${NEXT_PUBLIC_HCAPTCHA_SITE_KEY}
        - NEXT_PUBLIC_LICENSE_KEY=${NEXT_PUBLIC_LICENSE_KEY}
        - NEXT_PUBLIC_SECURITY_TOKEN=${NEXT_PUBLIC_SECURITY_TOKEN}
        - BACKEND_URL=${BACKEND_URL:-https://api.cargoscalepro.com}
        - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
        - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
        - HCAPTCHA_SECRET_KEY=${HCAPTCHA_SECRET_KEY}
    image: ${DOCKER_REGISTRY:-cargoscalepro}/frontend:${TAG:-latest}
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-https://cargoscalepro.com}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://api.cargoscalepro.com}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_MAPBOX_TOKEN=${NEXT_PUBLIC_MAPBOX_TOKEN}
      - NEXT_PUBLIC_CESIUM_TOKEN=${NEXT_PUBLIC_CESIUM_TOKEN}
      - NEXT_PUBLIC_MAPTILER_KEY=${NEXT_PUBLIC_MAPTILER_KEY}
      - NEXT_PUBLIC_HCAPTCHA_SITE_KEY=${NEXT_PUBLIC_HCAPTCHA_SITE_KEY}
      - NEXT_PUBLIC_LICENSE_KEY=${NEXT_PUBLIC_LICENSE_KEY}
      - NEXT_PUBLIC_SECURITY_TOKEN=${NEXT_PUBLIC_SECURITY_TOKEN}
      - BACKEND_URL=${BACKEND_URL:-https://api.cargoscalepro.com}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - HCAPTCHA_SECRET_KEY=${HCAPTCHA_SECRET_KEY}
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:3000']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cargoscalepro-network
    # Deploy configuration removed for Coolify compatibility
    # Coolify handles scaling and resource management

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: runner # Use the production-ready runner stage
      args:
        - NODE_ENV=production
        - SUPABASE_URL=${SUPABASE_URL}
        - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
        - SUPABASE_KEY=${SUPABASE_KEY}
        - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
        - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
        - DATABASE_URL=${DATABASE_URL}
        - POOL_CONNECTION_URL=${POOL_CONNECTION_URL}
        - JWT_SECRET=${JWT_SECRET}
        - PASETO_SECRET_KEY=${PASETO_SECRET_KEY}
        - PORT=${BACKEND_PORT:-5000}
        - FRONTEND_URL=${FRONTEND_URL:-https://cargoscalepro.com}
        - HEALTH_CHECK_ENABLED=${HEALTH_CHECK_ENABLED:-true}
        - LOG_LEVEL=${LOG_LEVEL:-info}
        - API_HOST=${API_HOST:-api.cargoscalepro.com}
        - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
        - MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
        - HERE_API_KEY=${HERE_API_KEY}
        - SAMSARA_API_KEY=${SAMSARA_API_KEY}
        - PCMILER_API_KEY=${PCMILER_API_KEY}
        - IPASS_API_KEY=${IPASS_API_KEY}
        - BESTPASS_CLIENT_ID=${BESTPASS_CLIENT_ID}
        - BESTPASS_CLIENT_SECRET=${BESTPASS_CLIENT_SECRET}
        - PREPASS_API_KEY=${PREPASS_API_KEY}
    image: ${DOCKER_REGISTRY:-cargoscalepro}/backend:${TAG:-latest}
    environment:
      - NODE_ENV=production
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - POOL_CONNECTION_URL=${POOL_CONNECTION_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PASETO_SECRET_KEY=${PASETO_SECRET_KEY}
      - PORT=${BACKEND_PORT:-5000}
      - FRONTEND_URL=${FRONTEND_URL:-https://cargoscalepro.com}
      - HEALTH_CHECK_ENABLED=${HEALTH_CHECK_ENABLED:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_HOST=${API_HOST:-api.cargoscalepro.com}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
      - HERE_API_KEY=${HERE_API_KEY}
      - SAMSARA_API_KEY=${SAMSARA_API_KEY}
      - PCMILER_API_KEY=${PCMILER_API_KEY}
      - IPASS_API_KEY=${IPASS_API_KEY}
      - BESTPASS_CLIENT_ID=${BESTPASS_CLIENT_ID}
      - BESTPASS_CLIENT_SECRET=${BESTPASS_CLIENT_SECRET}
      - PREPASS_API_KEY=${PREPASS_API_KEY}
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:5000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - cargoscalepro-network
    # Deploy configuration removed for Coolify compatibility
    # Coolify handles scaling and resource management

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cargoscalepro-network
    # Deploy configuration removed for Coolify compatibility
    # Coolify handles scaling and resource management

# Networks configuration for proper container communication
networks:
  cargoscalepro-network:
    driver: bridge

# Volumes section (empty but required for valid compose file)
volumes: {}
