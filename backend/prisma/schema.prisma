generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model axle_configurations {
  id                 Int        @id @default(autoincrement())
  name               String     @db.VarChar(100)
  description        String?
  axle_count         Int
  configuration_type String     @db.VarChar(50)
  is_specialized     Boolean?   @default(false)
  created_at         DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?  @default(now()) @db.Timestamptz(6)
  axles              axles[]
  vehicles           vehicles[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model axle_weights {
  id                Int            @id @default(autoincrement())
  weigh_ticket_id   Int?
  axle_position     Int
  weight            Int
  max_legal_weight  Int
  compliance_status String?        @db.VarChar(50)
  created_at        DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?      @default(now()) @db.Timestamptz(6)
  weigh_tickets     weigh_tickets? @relation(fields: [weigh_ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model axles {
  id                  Int                  @id @default(autoincrement())
  configuration_id    Int?
  position            Int
  max_legal_weight    Int
  description         String?              @db.VarChar(100)
  created_at          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?            @default(now()) @db.Timestamptz(6)
  axle_configurations axle_configurations? @relation(fields: [configuration_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([configuration_id, position])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cargo {
  id              Int            @id @default(autoincrement())
  weigh_ticket_id Int?
  description     String
  commodity_type  String?        @db.VarChar(100)
  is_hazmat       Boolean?       @default(false)
  hazmat_class    String?        @db.VarChar(50)
  volume          Decimal?       @db.Decimal(10, 2)
  volume_unit     String?        @db.VarChar(10)
  density         Decimal?       @db.Decimal(10, 2)
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?      @default(now()) @db.Timestamptz(6)
  weigh_tickets   weigh_tickets? @relation(fields: [weigh_ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model companies {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  address                 String?
  contact_email           String?                   @db.VarChar(255)
  contact_phone           String?                   @db.VarChar(50)
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  api_keys                api_keys[]
  drivers                 drivers[]
  equipment               equipment[]
  hardware_connections    hardware_connections[]
  integration_connections integration_connections[]
  loads                   loads[]
  scale_facilities        scale_facilities[]
  scales                  scales[]
  sync_queue              sync_queue[]
  users                   users[]
  vehicles                vehicles[]
  webhook_subscriptions   webhook_subscriptions[]
  weigh_tickets           weigh_tickets[]
  weights                 weights[]
  company_toll_accounts   company_toll_accounts[]
  toll_route_estimates    toll_route_estimates[]
  maintenance_work_orders maintenance_work_orders[]
  maintenance_vendors     maintenance_vendors[]
  maintenance_parts       maintenance_parts[]
  signatures              signatures[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model compliance_issues {
  id              Int            @id @default(autoincrement())
  weigh_ticket_id Int?
  issue_type      String         @db.VarChar(100)
  description     String
  severity        String?        @db.VarChar(50)
  recommendation  String?
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  weigh_tickets   weigh_tickets? @relation(fields: [weigh_ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model drivers {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  license_number    String              @db.VarChar(100)
  license_expiry    DateTime?           @db.Date
  phone             String?             @db.VarChar(50)
  email             String?             @db.VarChar(255)
  status            String?             @default("Active") @db.VarChar(50)
  company_id        Int?
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  companies         companies?          @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  loads             loads[]
  predictive_alerts predictive_alerts[]
  weigh_tickets     weigh_tickets[]
  weights           weights[]
  toll_transactions toll_transactions[]
  hos_logs          hos_logs[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model load_optimizations {
  id                     Int            @id @default(autoincrement())
  weigh_ticket_id        Int?
  original_distribution  Json?          @db.Json
  suggested_distribution Json?          @db.Json
  expected_improvement   Decimal?       @db.Decimal(5, 2)
  explanation            String?
  applied                Boolean?       @default(false)
  created_at             DateTime?      @default(now()) @db.Timestamptz(6)
  weigh_tickets          weigh_tickets? @relation(fields: [weigh_ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model loads {
  id          Int        @id @default(autoincrement())
  description String
  origin      String     @db.VarChar(255)
  destination String     @db.VarChar(255)
  weight      String     @db.VarChar(50)
  vehicle_id  Int?
  driver_id   Int?
  status      String?    @default("Pending") @db.VarChar(50)
  company_id  Int?
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?  @default(now()) @db.Timestamptz(6)
  companies   companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  drivers     drivers?   @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicles    vehicles?  @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  toll_route_estimates toll_route_estimates[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model predictive_alerts {
  id              Int       @id @default(autoincrement())
  vehicle_id      Int?
  driver_id       Int?
  alert_type      String    @db.VarChar(100)
  risk_score      Decimal   @db.Decimal(5, 2)
  description     String
  recommendation  String?
  acknowledged    Boolean?  @default(false)
  acknowledged_by String?   @db.Uuid
  acknowledged_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  users           users?    @relation(fields: [acknowledged_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  drivers         drivers?  @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicles        vehicles? @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scale_calibrations {
  id                    Int       @id @default(autoincrement())
  scale_id              Int?
  calibration_date      DateTime  @db.Date
  performed_by          String?   @db.VarChar(255)
  certificate_number    String?   @db.VarChar(100)
  notes                 String?
  next_calibration_date DateTime? @db.Date
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  scales                scales?   @relation(fields: [scale_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scale_facilities {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  address       String?
  latitude      Decimal?        @db.Decimal(10, 8)
  longitude     Decimal?        @db.Decimal(11, 8)
  company_id    Int?
  is_active     Boolean?        @default(true)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?       @default(now()) @db.Timestamptz(6)
  companies     companies?      @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scales        scales[]
  weigh_tickets weigh_tickets[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scale_readings {
  id               Int       @id @default(autoincrement())
  scale_id         Int?
  reading_value    Decimal   @db.Decimal(10, 2)
  reading_type     String    @db.VarChar(50)
  timestamp        DateTime? @default(now()) @db.Timestamptz(6)
  is_anomaly       Boolean?  @default(false)
  confidence_score Decimal?  @db.Decimal(5, 2)
  scales           scales?   @relation(fields: [scale_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scales {
  id                    Int                  @id @default(autoincrement())
  name                  String               @db.VarChar(100)
  facility_id           Int?
  scale_type            String               @db.VarChar(50)
  manufacturer          String?              @db.VarChar(100)
  model                 String?              @db.VarChar(100)
  serial_number         String?              @db.VarChar(100)
  max_capacity          Int
  precision             Decimal              @db.Decimal(10, 2)
  unit                  String?              @default("lb") @db.VarChar(10)
  ip_address            String?              @db.VarChar(45)
  port                  Int?
  protocol              String?              @db.VarChar(50)
  last_calibration_date DateTime?            @db.Date
  next_calibration_date DateTime?            @db.Date
  status                String?              @default("Active") @db.VarChar(50)
  company_id            Int?
  created_at            DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?            @default(now()) @db.Timestamptz(6)
  scale_calibrations    scale_calibrations[]
  scale_readings        scale_readings[]
  companies             companies?           @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scale_facilities      scale_facilities?    @relation(fields: [facility_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  weigh_tickets         weigh_tickets[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ticket_images {
  id              Int            @id @default(autoincrement())
  weigh_ticket_id Int?
  image_url       String
  image_type      String?        @db.VarChar(50)
  captured_by     String?        @db.Uuid
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  users           users?         @relation(fields: [captured_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  weigh_tickets   weigh_tickets? @relation(fields: [weigh_ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ticket_signatures {
  id              Int            @id @default(autoincrement())
  weigh_ticket_id Int?
  signature_url   String
  name            String         @db.VarChar(255)
  role            String?        @db.VarChar(100)
  ip_address      String?        @db.VarChar(45)
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  weigh_tickets   weigh_tickets? @relation(fields: [weigh_ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                      String                    @id @db.Uuid
  name                    String                    @db.VarChar(255)
  email                   String                    @unique @db.VarChar(255)
  company_id              Int?
  is_admin                Boolean?                  @default(false)
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  api_keys                api_keys[]
  hardware_connections    hardware_connections[]
  integration_connections integration_connections[]
  predictive_alerts       predictive_alerts[]
  ticket_images           ticket_images[]
  companies               companies?                @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  webhook_subscriptions   webhook_subscriptions[]
  weigh_tickets           weigh_tickets[]
  created_maintenance_work_orders maintenance_work_orders[]
  signatures              signatures[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model vehicles {
  id                    Int                  @id @default(autoincrement())
  name                  String               @db.VarChar(255)
  type                  String               @db.VarChar(100)
  license_plate         String               @db.VarChar(50)
  vin                   String?              @unique @db.VarChar(100)
  make                  String?              @db.VarChar(100)
  model                 String?              @db.VarChar(100)
  year                  Int?
  status                String?              @default("Active") @db.VarChar(50)
  max_weight            String?              @db.VarChar(50)
  company_id            Int?
  created_at            DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?            @default(now()) @db.Timestamptz(6)
  axle_configuration_id Int?
  empty_weight          Int?
  max_gross_weight      Int?
  height                Int?
  width                 Int?
  length                Int?
  telematics_id         String?              @db.VarChar(100)
  eld_integration       Boolean?             @default(false)
  last_inspection_date  DateTime?            @db.Date
  loads                 loads[]
  predictive_alerts     predictive_alerts[]
  equipment_as_vehicle  equipment[] @relation("EquipmentToVehicle")
  equipment_as_trailer  equipment[] @relation("EquipmentToTrailer")
  maintenance_work_orders maintenance_work_orders[] @relation("VehicleMaintenance")
  axle_configurations   axle_configurations? @relation(fields: [axle_configuration_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies             companies?           @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  weigh_tickets         weigh_tickets[]
  weights               weights[]
  vehicle_toll_transponders vehicle_toll_transponders[]
  toll_transactions     toll_transactions[]
  toll_route_estimates  toll_route_estimates[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model weigh_tickets {
  id                 Int                  @id @default(autoincrement())
  ticket_number      String               @unique @db.VarChar(50)
  vehicle_id         Int?
  driver_id          Int?
  scale_id           Int?
  facility_id        Int?
  gross_weight       Int?
  tare_weight        Int?
  net_weight         Int?
  unit               String?              @default("lb") @db.VarChar(10)
  date_time          DateTime             @db.Timestamptz(6)
  status             String?              @default("Created") @db.VarChar(50)
  compliance_status  String?              @db.VarChar(50)
  capture_method     String?              @default("Scale") @db.VarChar(50)
  latitude           Decimal?             @db.Decimal(10, 8)
  longitude          Decimal?             @db.Decimal(11, 8)
  notes              String?
  company_id         Int?
  created_by         String?              @db.Uuid
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  axle_weights       axle_weights[]
  cargo              cargo[]
  compliance_issues  compliance_issues[]
  load_optimizations load_optimizations[]
  ticket_images      ticket_images[]
  ticket_signatures  ticket_signatures[]
  companies          companies?           @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users?               @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  drivers            drivers?             @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scale_facilities   scale_facilities?    @relation(fields: [facility_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scales             scales?              @relation(fields: [scale_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicles           vehicles?            @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model weights {
  id         Int        @id @default(autoincrement())
  vehicle_id Int?
  weight     String     @db.VarChar(50)
  date       DateTime   @db.Date
  time       String?    @db.VarChar(50)
  driver_id  Int?
  status     String?    @db.VarChar(50)
  company_id Int?
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  companies  companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  drivers    drivers?   @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicles   vehicles?  @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_keys {
  id           String      @id @default(uuid()) @db.Uuid
  name         String      @db.VarChar(100)
  key          String      @unique @db.VarChar(255)
  company_id   Int?
  created_by   String?     @db.Uuid
  expires_at   DateTime?   @db.Timestamptz(6)
  last_used_at DateTime?   @db.Timestamptz(6)
  is_active    Boolean     @default(true)
  permissions  String[]    @db.VarChar(50)
  created_at   DateTime    @default(now()) @db.Timestamptz(6)
  updated_at   DateTime    @default(now()) @db.Timestamptz(6)
  companies    companies?  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users        users?      @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  api_usage    api_usage[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_usage {
  id         String   @id @default(uuid()) @db.Uuid
  api_key_id String   @db.Uuid
  endpoint   String   @db.VarChar(255)
  method     String   @db.VarChar(10)
  status     Int
  ip_address String?  @db.VarChar(45)
  user_agent String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  api_keys   api_keys @relation(fields: [api_key_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webhook_subscriptions {
  id                 String               @id @default(uuid()) @db.Uuid
  company_id         Int?
  name               String               @db.VarChar(100)
  event_types        String[]             @db.VarChar(50)
  target_url         String
  secret_key         String?              @db.VarChar(255)
  is_active          Boolean              @default(true)
  created_by         String?              @db.Uuid
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  webhook_deliveries webhook_deliveries[]
  companies          companies?           @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users?               @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webhook_deliveries {
  id                      String                @id @default(uuid()) @db.Uuid
  webhook_subscription_id String                @db.Uuid
  event_type              String                @db.VarChar(50)
  payload                 Json
  response_status         Int?
  response_body           String?
  error_message           String?
  attempts                Int                   @default(0)
  next_retry_at           DateTime?             @db.Timestamptz(6)
  created_at              DateTime              @default(now()) @db.Timestamptz(6)
  updated_at              DateTime              @default(now()) @db.Timestamptz(6)
  webhook_subscriptions   webhook_subscriptions @relation(fields: [webhook_subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model integration_connections {
  id               String             @id @default(uuid()) @db.Uuid
  company_id       Int?
  integration_type String             @db.VarChar(50)
  provider         String             @db.VarChar(50)
  credentials      Json?
  settings         Json?
  is_active        Boolean            @default(true)
  last_sync_at     DateTime?          @db.Timestamptz(6)
  created_by       String?            @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  updated_at       DateTime           @default(now()) @db.Timestamptz(6)
  companies        companies?         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            users?             @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  integration_logs integration_logs[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model integration_logs {
  id                        String                  @id @default(uuid()) @db.Uuid
  integration_connection_id String                  @db.Uuid
  event_type                String                  @db.VarChar(50)
  status                    String                  @db.VarChar(50)
  message                   String?
  details                   Json?
  created_at                DateTime                @default(now()) @db.Timestamptz(6)
  integration_connections   integration_connections @relation(fields: [integration_connection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model hardware_connections {
  id                 String     @id @default(uuid()) @db.Uuid
  company_id         Int?
  hardware_type      String     @db.VarChar(50)
  name               String     @db.VarChar(100)
  model              String?    @db.VarChar(100)
  serial_number      String?    @db.VarChar(100)
  connection_details Json?
  is_active          Boolean    @default(true)
  last_connected_at  DateTime?  @db.Timestamptz(6)
  created_by         String?    @db.Uuid
  created_at         DateTime   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime   @default(now()) @db.Timestamptz(6)
  companies          companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users?     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blockchain_records {
  id                   String   @id @default(uuid()) @db.Uuid
  record_type          String   @db.VarChar(50)
  record_id            String   @db.VarChar(255)
  hash                 String   @db.VarChar(255)
  previous_hash        String?  @db.VarChar(255)
  blockchain_id        String?  @db.VarChar(255)
  transaction_id       String?  @db.VarChar(255)
  verified             Boolean  @default(false)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model testimonials {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  company    String     @db.VarChar(255)
  position   String     @db.VarChar(255)
  rating     Int
  review     String
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sync_queue {
  id         String    @id @db.VarChar(255)
  company_id Int
  table_name String    @db.VarChar(255)
  action     String    @db.VarChar(50)
  data       Json
  status     String?   @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// Cities table to store information about municipalities
model cities {
  id                   Int                 @id @default(autoincrement())
  name                 String              @db.VarChar(100)
  state                String              @db.VarChar(50)
  country              String              @db.VarChar(100) @default("USA")
  address              String?             @db.VarChar(255)
  zip_code             String?             @db.VarChar(20)
  contact_email        String?             @db.VarChar(255)
  contact_phone        String?             @db.VarChar(50)
  logo_url             String?             @db.VarChar(255)
  website              String?             @db.VarChar(255)
  status               String              @default("Active") @db.VarChar(50)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)

  /// Relations
  city_users           city_users[]
  city_scales          city_scales[]
  city_permits         city_permits[]
  city_violations      city_violations[]
  city_weigh_tickets   city_weigh_tickets[]
}

/// City users table for city staff authentication
model city_users {
  id                   String              @id @db.Uuid
  name                 String              @db.VarChar(255)
  email                String              @unique @db.VarChar(255)
  city_id              Int
  role                 String              @db.VarChar(50)
  is_active            Boolean             @default(true)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)

  /// Relations
  cities               cities              @relation(fields: [city_id], references: [id], onDelete: Cascade)
  city_permits         city_permits[]
  city_violations      city_violations[]
  city_weigh_tickets   city_weigh_tickets[]
}

/// City scales table for scales owned by cities
model city_scales {
  id                   Int                 @id @default(autoincrement())
  name                 String              @db.VarChar(100)
  location             String?             @db.VarChar(255)
  latitude             Decimal?            @db.Decimal(10, 8)
  longitude            Decimal?            @db.Decimal(11, 8)
  scale_type           String              @db.VarChar(50)
  manufacturer         String?             @db.VarChar(100)
  model                String?             @db.VarChar(100)
  serial_number        String?             @db.VarChar(100)
  max_capacity         Decimal?            @db.Decimal(10, 2)
  precision            Decimal?            @db.Decimal(5, 2)
  calibration_date     DateTime?           @db.Date
  next_calibration_date DateTime?          @db.Date
  status               String              @default("Active") @db.VarChar(50)
  city_id              Int
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)

  /// Relations
  cities               cities              @relation(fields: [city_id], references: [id], onDelete: Cascade)
  city_weigh_tickets   city_weigh_tickets[]
}

/// City permits table for overweight/oversize permits
model city_permits {
  id                   Int                 @id @default(autoincrement())
  permit_number        String              @unique @db.VarChar(50)
  company_name         String              @db.VarChar(255)
  contact_name         String?             @db.VarChar(255)
  contact_email        String?             @db.VarChar(255)
  contact_phone        String?             @db.VarChar(50)
  vehicle_info         String              @db.VarChar(255)
  permit_type          String              @db.VarChar(50)
  max_weight           Decimal?            @db.Decimal(10, 2)
  dimensions           Json?               @db.Json
  start_date           DateTime            @db.Date
  end_date             DateTime            @db.Date
  fee_amount           Decimal             @db.Decimal(10, 2)
  payment_status       String              @default("Pending") @db.VarChar(50)
  status               String              @default("Active") @db.VarChar(50)
  approved_by          String?             @db.Uuid
  city_id              Int
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)

  /// Relations
  cities               cities              @relation(fields: [city_id], references: [id], onDelete: Cascade)
  city_users           city_users?         @relation(fields: [approved_by], references: [id], onDelete: SetNull)
}

/// City violations table for tracking violations
model city_violations {
  id                   Int                 @id @default(autoincrement())
  violation_number     String              @unique @db.VarChar(50)
  company_name         String?             @db.VarChar(255)
  vehicle_info         String              @db.VarChar(255)
  driver_name          String?             @db.VarChar(255)
  violation_type       String              @db.VarChar(50)
  violation_details    String?             @db.Text
  fine_amount          Decimal             @db.Decimal(10, 2)
  payment_status       String              @default("Pending") @db.VarChar(50)
  violation_date       DateTime            @db.Timestamptz(6)
  location             String?             @db.VarChar(255)
  issued_by            String?             @db.Uuid
  city_id              Int
  weigh_ticket_id      Int?
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)

  /// Relations
  cities               cities              @relation(fields: [city_id], references: [id], onDelete: Cascade)
  city_users           city_users?         @relation(fields: [issued_by], references: [id], onDelete: SetNull)
  city_weigh_tickets   city_weigh_tickets? @relation(fields: [weigh_ticket_id], references: [id], onDelete: SetNull)
}

/// City weigh tickets table
model city_weigh_tickets {
  id                   Int                 @id @default(autoincrement())
  ticket_number        String              @unique @db.VarChar(50)
  vehicle_info         String              @db.VarChar(255)
  driver_name          String?             @db.VarChar(255)
  company_name         String?             @db.VarChar(255)
  gross_weight         Decimal             @db.Decimal(10, 2)
  tare_weight          Decimal?            @db.Decimal(10, 2)
  net_weight           Decimal?            @db.Decimal(10, 2)
  unit                 String              @default("lb") @db.VarChar(10)
  weigh_date           DateTime            @db.Timestamptz(6)
  scale_id             Int?
  city_id              Int
  recorded_by          String?             @db.Uuid
  notes                String?
  status               String              @default("Completed") @db.VarChar(50)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)

  /// Relations
  cities               cities              @relation(fields: [city_id], references: [id], onDelete: Cascade)
  city_scales          city_scales?        @relation(fields: [scale_id], references: [id], onDelete: SetNull)
  city_users           city_users?         @relation(fields: [recorded_by], references: [id], onDelete: SetNull)
  city_violations      city_violations[]
}

/// Toll Providers Configuration
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model toll_providers {
  id                   Int                           @id @default(autoincrement())
  name                 String                        @unique @db.VarChar(100)
  provider_type        String                        @db.VarChar(50)
  api_endpoint         String?                       @db.VarChar(500)
  api_version          String?                       @db.VarChar(20)
  authentication_type  String?                       @db.VarChar(50)
  is_active            Boolean                       @default(true)
  supported_regions    String[]
  features             Json?
  rate_limits          Json?
  created_at           DateTime                      @default(now()) @db.Timestamptz(6)
  updated_at           DateTime                      @default(now()) @db.Timestamptz(6)

  /// Relations
  company_toll_accounts company_toll_accounts[]
  toll_routes          toll_routes[]
  toll_route_estimates toll_route_estimates[]
}

/// Company Toll Accounts
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_toll_accounts {
  id                    Int                           @id @default(autoincrement())
  company_id            Int
  toll_provider_id      Int
  account_number        String?                       @db.VarChar(100)
  account_name          String?                       @db.VarChar(255)
  credentials           Json?
  account_settings      Json?
  account_status        String                        @default("active") @db.VarChar(50)
  balance_amount        Decimal?                      @db.Decimal(10, 2)
  balance_currency      String                        @default("USD") @db.VarChar(3)
  last_sync_at          DateTime?                     @db.Timestamptz(6)
  sync_status           String                        @default("pending") @db.VarChar(50)
  sync_error_message    String?                       @db.Text
  created_at            DateTime                      @default(now()) @db.Timestamptz(6)
  updated_at            DateTime                      @default(now()) @db.Timestamptz(6)

  /// Relations
  companies             companies                     @relation(fields: [company_id], references: [id], onDelete: Cascade)
  toll_providers        toll_providers                @relation(fields: [toll_provider_id], references: [id], onDelete: Cascade)
  vehicle_toll_transponders vehicle_toll_transponders[]
  toll_transactions     toll_transactions[]
  toll_sync_logs        toll_sync_logs[]

  @@unique([company_id, toll_provider_id, account_number])
}

/// Vehicle Toll Transponders
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model vehicle_toll_transponders {
  id                       Int                    @id @default(autoincrement())
  vehicle_id               Int
  company_toll_account_id  Int
  transponder_id           String?                @db.VarChar(100)
  transponder_type         String?                @db.VarChar(50)
  status                   String                 @default("active") @db.VarChar(50)
  assigned_date            DateTime?              @db.Date
  last_used_date           DateTime?              @db.Date
  notes                    String?                @db.Text
  created_at               DateTime               @default(now()) @db.Timestamptz(6)
  updated_at               DateTime               @default(now()) @db.Timestamptz(6)

  /// Relations
  vehicles                 vehicles               @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
  company_toll_accounts    company_toll_accounts  @relation(fields: [company_toll_account_id], references: [id], onDelete: Cascade)

  @@unique([vehicle_id, company_toll_account_id])
}

/// Toll Routes and Calculations
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model toll_routes {
  id                       Int                    @id @default(autoincrement())
  route_name               String?                @db.VarChar(255)
  origin_address           String                 @db.Text
  destination_address      String                 @db.Text
  origin_coordinates       String?                @db.Text
  destination_coordinates  String?                @db.Text
  distance_miles           Decimal?               @db.Decimal(8, 2)
  estimated_duration_minutes Int?
  toll_provider_id         Int?
  route_data               Json?
  toll_points              Json?
  total_toll_cost          Decimal?               @db.Decimal(10, 2)
  vehicle_class            String?                @db.VarChar(20)
  created_at               DateTime               @default(now()) @db.Timestamptz(6)
  updated_at               DateTime               @default(now()) @db.Timestamptz(6)

  /// Relations
  toll_providers           toll_providers?        @relation(fields: [toll_provider_id], references: [id], onDelete: SetNull)
}

/// Toll Transactions
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model toll_transactions {
  id                       Int                    @id @default(autoincrement())
  company_toll_account_id  Int
  vehicle_id               Int?
  driver_id                Int?
  transponder_id           String?                @db.VarChar(100)
  transaction_id           String?                @db.VarChar(100)
  toll_facility_name       String?                @db.VarChar(255)
  toll_facility_id         String?                @db.VarChar(100)
  location_address         String?                @db.Text
  location_coordinates     String?                @db.Text
  transaction_date         DateTime               @db.Timestamptz(6)
  amount                   Decimal                @db.Decimal(10, 2)
  currency                 String                 @default("USD") @db.VarChar(3)
  vehicle_class            String?                @db.VarChar(20)
  entry_time               DateTime?              @db.Timestamptz(6)
  exit_time                DateTime?              @db.Timestamptz(6)
  route_info               Json?
  transaction_status       String                 @default("completed") @db.VarChar(50)
  provider_data            Json?
  created_at               DateTime               @default(now()) @db.Timestamptz(6)
  updated_at               DateTime               @default(now()) @db.Timestamptz(6)

  /// Relations
  company_toll_accounts    company_toll_accounts  @relation(fields: [company_toll_account_id], references: [id], onDelete: Cascade)
  vehicles                 vehicles?              @relation(fields: [vehicle_id], references: [id], onDelete: SetNull)
  drivers                  drivers?               @relation(fields: [driver_id], references: [id], onDelete: SetNull)
}

/// Toll Route Estimates
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model toll_route_estimates {
  id                          Int                    @id @default(autoincrement())
  company_id                  Int
  load_id                     Int?
  vehicle_id                  Int?
  route_name                  String?                @db.VarChar(255)
  origin_address              String                 @db.Text
  destination_address         String                 @db.Text
  estimated_toll_cost         Decimal?               @db.Decimal(10, 2)
  estimated_distance_miles    Decimal?               @db.Decimal(8, 2)
  estimated_duration_minutes  Int?
  vehicle_class               String?                @db.VarChar(20)
  toll_breakdown              Json?
  route_alternatives          Json?
  calculation_date            DateTime               @default(now()) @db.Timestamptz(6)
  expires_at                  DateTime?              @db.Timestamptz(6)
  toll_provider_id            Int?
  created_at                  DateTime               @default(now()) @db.Timestamptz(6)

  /// Relations
  companies                   companies              @relation(fields: [company_id], references: [id], onDelete: Cascade)
  loads                       loads?                 @relation(fields: [load_id], references: [id], onDelete: Cascade)
  vehicles                    vehicles?              @relation(fields: [vehicle_id], references: [id], onDelete: SetNull)
  toll_providers              toll_providers?        @relation(fields: [toll_provider_id], references: [id], onDelete: SetNull)
}

/// Toll Provider Sync Logs
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model toll_sync_logs {
  id                       Int                    @id @default(autoincrement())
  company_toll_account_id  Int
  sync_type                String                 @db.VarChar(50)
  sync_status              String                 @db.VarChar(50)
  records_processed        Int                    @default(0)
  records_created          Int                    @default(0)
  records_updated          Int                    @default(0)
  error_message            String?                @db.Text
  sync_duration_seconds    Int?
  started_at               DateTime               @default(now()) @db.Timestamptz(6)
  completed_at             DateTime?              @db.Timestamptz(6)
  sync_data                Json?

  /// Relations
  company_toll_accounts    company_toll_accounts  @relation(fields: [company_toll_account_id], references: [id], onDelete: Cascade)
}

/// Equipment Management
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model equipment {
  id                      Int                    @id @default(autoincrement())
  company_id              Int
  name                    String                 @db.VarChar(255)
  type                    String                 @db.VarChar(100)
  manufacturer            String?                @db.VarChar(100)
  model                   String?                @db.VarChar(100)
  serial_number           String                 @db.VarChar(100)
  purchase_date           DateTime?              @db.Date
  warranty_expires        DateTime?              @db.Date
  status                  String                 @default("Available") @db.VarChar(50)
  assigned_vehicle_id     Int?
  assigned_trailer_id     Int?
  purchase_price          Decimal?               @db.Decimal(10, 2)
  current_value           Decimal?               @db.Decimal(10, 2)
  last_maintenance_date   DateTime?              @db.Date
  next_maintenance_due    DateTime?              @db.Date
  notes                   String?                @db.Text
  created_at              DateTime               @default(now()) @db.Timestamptz(6)
  updated_at              DateTime               @updatedAt @db.Timestamptz(6)

  /// Relations
  company                 companies              @relation(fields: [company_id], references: [id], onDelete: Cascade)
  assigned_vehicle        vehicles?              @relation("EquipmentToVehicle", fields: [assigned_vehicle_id], references: [id], onDelete: SetNull)
  assigned_trailer        vehicles?              @relation("EquipmentToTrailer", fields: [assigned_trailer_id], references: [id], onDelete: SetNull)
  maintenance_records     maintenance_work_orders[] @relation("EquipmentMaintenance")

  @@unique([company_id, serial_number])
  @@index([company_id, status])
  @@index([company_id, type])
  @@index([warranty_expires])
  @@index([next_maintenance_due])
}

/// Maintenance Work Orders
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model maintenance_work_orders {
  id                      Int                    @id @default(autoincrement())
  company_id              Int
  equipment_id            Int?
  vehicle_id              Int?
  work_order_number       String                 @db.VarChar(50)
  title                   String                 @db.VarChar(255)
  description             String?                @db.Text
  type                    String                 @db.VarChar(50)
  priority                String                 @default("Medium") @db.VarChar(20)
  status                  String                 @default("Open") @db.VarChar(50)
  assigned_to             String?                @db.VarChar(100)
  scheduled_date          DateTime?              @db.Timestamptz(6)
  started_date            DateTime?              @db.Timestamptz(6)
  completed_date          DateTime?              @db.Timestamptz(6)
  estimated_hours         Decimal?               @db.Decimal(5, 2)
  actual_hours            Decimal?               @db.Decimal(5, 2)
  estimated_cost          Decimal?               @db.Decimal(10, 2)
  actual_cost             Decimal?               @db.Decimal(10, 2)
  vendor_id               Int?
  notes                   String?                @db.Text
  created_by              String                 @db.Uuid
  created_at              DateTime               @default(now()) @db.Timestamptz(6)
  updated_at              DateTime               @updatedAt @db.Timestamptz(6)

  /// Relations
  company                 companies              @relation(fields: [company_id], references: [id], onDelete: Cascade)
  equipment               equipment?             @relation("EquipmentMaintenance", fields: [equipment_id], references: [id], onDelete: SetNull)
  vehicle                 vehicles?              @relation("VehicleMaintenance", fields: [vehicle_id], references: [id], onDelete: SetNull)
  vendor                  maintenance_vendors?   @relation(fields: [vendor_id], references: [id], onDelete: SetNull)
  created_by_user         users                  @relation(fields: [created_by], references: [id], onDelete: Restrict)
  parts                   maintenance_parts[]    @relation("WorkOrderParts")

  @@unique([company_id, work_order_number])
  @@index([company_id, status])
  @@index([company_id, type])
  @@index([scheduled_date])
  @@index([equipment_id])
  @@index([vehicle_id])
}

/// Maintenance Parts
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model maintenance_parts {
  id                      Int                    @id @default(autoincrement())
  company_id              Int
  work_order_id           Int
  part_name               String                 @db.VarChar(255)
  part_number             String?                @db.VarChar(100)
  quantity                Int
  unit_cost               Decimal?               @db.Decimal(10, 2)
  total_cost              Decimal?               @db.Decimal(10, 2)
  vendor_id               Int?
  notes                   String?                @db.Text
  created_at              DateTime               @default(now()) @db.Timestamptz(6)

  /// Relations
  company                 companies              @relation(fields: [company_id], references: [id], onDelete: Cascade)
  work_order              maintenance_work_orders @relation("WorkOrderParts", fields: [work_order_id], references: [id], onDelete: Cascade)
  vendor                  maintenance_vendors?   @relation(fields: [vendor_id], references: [id], onDelete: SetNull)

  @@index([company_id])
  @@index([work_order_id])
}

/// Maintenance Vendors
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model maintenance_vendors {
  id                      Int                    @id @default(autoincrement())
  company_id              Int
  name                    String                 @db.VarChar(255)
  contact_person          String?                @db.VarChar(100)
  phone                   String?                @db.VarChar(20)
  email                   String?                @db.VarChar(100)
  address                 String?                @db.Text
  specialties             String[]               @default([])
  rating                  Decimal?               @db.Decimal(3, 2)
  notes                   String?                @db.Text
  is_active               Boolean                @default(true)
  created_at              DateTime               @default(now()) @db.Timestamptz(6)
  updated_at              DateTime               @updatedAt @db.Timestamptz(6)

  /// Relations
  company                 companies              @relation(fields: [company_id], references: [id], onDelete: Cascade)
  work_orders             maintenance_work_orders[]
  parts                   maintenance_parts[]

  @@index([company_id])
  @@index([is_active])
}

/// Hours of Service logs for ELD compliance
model hos_logs {
  id                  Int       @id @default(autoincrement())
  driver_id           Int
  duty_status         String    @db.VarChar(50)
  start_time          DateTime  @db.Timestamptz(6)
  end_time            DateTime? @db.Timestamptz(6)
  log_date            DateTime  @db.Date
  duration_minutes    Int?
  violation_indicators String[]  @default([])
  odometer_start      Int?
  odometer_end        Int?
  location_start      Json?     @db.Json
  location_end        Json?     @db.Json
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  updated_at          DateTime  @updatedAt @db.Timestamptz(6)

  /// Relations
  driver              drivers   @relation(fields: [driver_id], references: [id], onDelete: Cascade)

  @@index([driver_id])
  @@index([log_date])
  @@index([duty_status])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model signatures {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(255)
  signature_url String?
  company_id   Int?
  created_by   String?   @db.Uuid
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
  
  /// Relations
  company      companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         users?     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  @@index([company_id])
  @@index([created_by])
  @@index([created_at])
}
