# Copyright (c) 2025 Cosmo Exploit Group LLC. All Rights Reserved.
#
# PROPRIETARY AND CONFIDENTIAL
#
# This file is part of the Cosmo Exploit Group LLC Weight Management System.
# Unauthorized copying of this file, via any medium is strictly prohibited.
#
# This file contains proprietary and confidential information of
# Cosmo Exploit Group LLC and may not be copied, distributed, or used
# in any way without explicit written permission.

name: PR Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  syntax-check:
    name: Syntax Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Check for syntax errors (Frontend)
        working-directory: ./frontend
        run: npx eslint --ext .js,.jsx,.ts,.tsx src/ --max-warnings=0 --no-error-on-unmatched-pattern

      - name: Check for syntax errors (Backend)
        working-directory: ./backend
        run: npx eslint --ext .js,.ts . --ignore-pattern "node_modules/**" --ignore-pattern "generated/**" --ignore-pattern "prisma/**" --max-warnings=0 --no-error-on-unmatched-pattern || echo "Backend syntax check failed but continuing"

      - name: TypeScript type check (Frontend)
        working-directory: ./frontend
        run: npx tsc --noEmit

      - name: TypeScript type check (Backend)
        working-directory: ./backend
        run: npx tsc --noEmit || echo "Backend type check failed but continuing"

  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Check formatting (Frontend)
        working-directory: ./frontend
        run: npx prettier --check "src/**/*.{js,jsx,ts,tsx,json,md,css}"

      - name: Check formatting (Backend)
        working-directory: ./backend
        run: npx prettier --check "**/*.{js,ts,json,md}" --ignore-path .prettierignore || echo "Backend formatting check failed but continuing"
